<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.teamone.ownit.mapper.NoticeMapper">

<!-- 	private int notice_idx; -->
<!-- 	private String notice_category; -->
<!-- 	private String notice_subject; -->
<!-- 	private String notice_content; -->
<!-- 	private int notice_readcount; -->
<!-- 	private String notice_date; -->

	<!-- insert 태그  -->
	<insert id="insertNotice">
		<selectKey keyProperty="notice_idx" resultType="integer" order="BEFORE">
			SELECT MAX(notice_idx) FROM notice
		</selectKey>
		INSERT 
			INTO notice
			VALUES (
					#{notice_idx} + 1, 
					#{notice_category}, 
					#{notice_subject}, 
					#{notice_content}, 
					#{notice_readcount}, 
					date_format(now(),'%y-%m-%d'))
	</insert>
	
	<!-- 전체 게시물 목록 갯수 조회(검색 기능 추가) -->
	<select id="selectNoticeListCount" resultType="integer">
		SELECT 
			COUNT(*) 
			FROM notice
			<!-- choose, when, otherwise 태그를 사용하여 복수개의 조건 판별(if ~ else if 문 구조) -->
			<!-- 1. 검색어(keyword)가 널스트링이 아닐 때 검색 수행 -->
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<choose>
					<when test="searchType.equals('subject')">
						WHERE notice_subject LIKE '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						WHERE notice_content LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('subject_content')">
						WHERE notice_subject LIKE '%${keyword}%' OR notice_content LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
	</select>

	<!-- 게시물 목록 조회(검색 기능 추가) -->
	<select id="selectNoticeList" resultType="com.teamone.ownit.vo.NoticeVO">
		SELECT * 
			FROM notice
			<!-- choose, when, otherwise 태그를 사용하여 복수개의 조건 판별(if ~ else if 문 구조) -->
			<!-- 1. 검색어(keyword)가 널스트링이 아닐 때 검색 수행 -->
			<if test="!keyword.equals('')">
				<!-- 2. 검색타입(search)에 따른 WHERE 변경 -->
				<!-- 
				주의! #{} 는 주로 파라미터 데이터 표시 용도로 사용하며 문자열의 경우 자동으로 따옴표 붙음 
				반면, ${} 는 주로 컬럼명 등의 데이터가 아닌 용도로 사용하며 자동으로 따옴표 붙지 않음
				(#{} 은 SQL 삽입 공격 방지 대책으로 사용되므로 데이터(파라미터) 부분에 사용함)
				따라서, LIKE 절의 % 와 검색어 등을 조합해야할 경우 #{} 사용 시 %'#{데이터}'% 형식이 되므로
				#{} 대신 ${} 를 사용하여 직접 '%${데이터}%' 형태로 작은따옴표를 붙여서 표시해야한다!
				또는 CONCAT 함수를 통해 문자열 결합으로 사용해야한다!
				
				ex) WHERE board_subject LIKE '%${keyword}%'
				또는
				ex) WHERE board_subject LIKE CONCAT('%', #{keyword}, '%')
				-->
				<choose>
					<when test="searchType.equals('subject')">
						WHERE notice_subject LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('content')">
						WHERE notice_content LIKE '%${keyword}%' 
					</when>
					<when test="searchType.equals('subject_content')">
						WHERE notice_subject LIKE '%${keyword}%' OR notice_content LIKE '%${keyword}%'
					</when>
				</choose>
			</if>
			ORDER BY
				notice_idx DESC		
			LIMIT #{startRow}, #{listLimit}
	</select>	
	
	<!-- 게시물 조회수 증가 -->
	<update id="updateReadcount">
		UPDATE notice
			SET
				notice_readcount = notice_readcount + 1
			WHERE
				notice_idx = #{notice_idx}
	</update>
	
	<!-- 게시물 상세 정보 조회 -->
	<select id="selectNotice" resultType="com.teamone.ownit.vo.NoticeVO">
		SELECT * 
			FROM notice
			WHERE
				notice_idx = #{notice_idx}
	</select>
	
	<!-- 게시물 삭제 -->
	<delete id="deleteNotice">
		DELETE
			FROM notice
			WHERE 
				notice_idx = #{notice_idx}
	</delete>
	
	

</mapper> 
